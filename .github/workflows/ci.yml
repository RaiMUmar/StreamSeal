name: CI
on:
  push:
  pull_request:

jobs:
  build-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        san: [none, asan]
    runs-on: ${{ matrix.os }}

    env:
      # Helps ASan on macOS behave; your Makefile already respects SAN=asan
      MallocNanoZone: ${{ matrix.os == 'macos-latest' && matrix.san == 'asan' && '0' || '' }}

    steps:
      - uses: actions/checkout@v4

      - name: Install deps (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang make pkg-config \
                                  libsodium-dev cppcheck codespell

      - name: Install deps (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install pkg-config libsodium cppcheck codespell
          # ensure pkg-config sees libsodium
          echo "PKG_CONFIG_PATH=$(brew --prefix libsodium)/lib/pkgconfig" >> $GITHUB_ENV

      - name: Build
        run: |
          if [ "${{ matrix.san }}" = "asan" ]; then SAN=asan make -j; else make -j; fi

      - name: Unit tests
        run: |
          if [ "${{ matrix.san }}" = "asan" ]; then SAN=asan make test; else make test; fi

      - name: Static analysis (cppcheck)
        run: make cppcheck

      - name: Spellcheck (codespell)
        run: |
          # Fail on PRs so contributors fix typos; warn (donâ€™t fail) on direct pushes
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            make codespell
          else
            make codespell || echo "::warning ::codespell found issues (non-blocking on push)"
          fi

      - name: Fuzz smoke
        run: |
          if [ "${{ matrix.san }}" = "asan" ]; then SAN=asan make fuzz-smoke; else make fuzz-smoke; fi

